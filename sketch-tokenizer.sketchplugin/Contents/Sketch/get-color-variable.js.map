{"version":3,"sources":["webpack://exports/webpack/bootstrap","webpack://exports/./src/get-color-variable.js"],"names":["colorVariables","baseColors","green","default","white","navy","blue","gray","orange","red","purple","black","quoteColor","r","g","b","a","context","selection","document","showMessage","length","colorMapping","getColorVariablesMapping","currentSelectedColor","getFillHexColor","toString","toUpperCase","text","getFillColorVariable","insertTokenText","layerName","title","x","y","width","textWithToken","createTextLayer","frame","midY","createQuoteLine","currentPage","addLayers","selectedElementWidth","position","elementWidth","path","NSBezierPath","bezierPath","moveToPoint","NSMakePoint","lineToPoint","shape","MSShapeGroup","shapeWithBezierPath","MSPath","pathWithBezierPath","border","style","addStylePartOfType","color","MSColor","colorWithRGBADictionary","thickness","layer","selectedColor","getFillRGBColor","colorHex","immutableModelObject","hexValue","type","MSTextLayer","textColor","fills","firstObject","borders","hexToColor","hex","alpha","result","exec","parseInt","NSColor","colorWithCalibratedRed_green_blue_alpha","name","stringValue","textLayer","new","setTextColor","variables","obj","colorNames","Object","keys","map","colorGroup","colorGroupName","forEach","variation"],"mappings":"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","file":"get-color-variable.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/get-color-variable.js\");\n","// My plugin (command shift s)\nconst colorVariables = {\n  baseColors: {\n    green: {\n      default: \"#14B39D\",\n      25: \"#0B8171\",\n      40: \"#19CCB3\",\n      85: \"#B4FFF6\",\n      95: \"#E6FFFC\",\n    },\n    white: {\n      default: \"#FFFFFF\"\n    },\n    navy: {\n      default: \"#1D3D45\",\n      30: \"#2E5768\",\n      40: \"#407A8B\",\n      95: \"#EEF4F6\",\n      98 : \"#F9FBFB\"\n    },\n    blue: {\n      default: \"#0090E0\",\n      95: \"#B2E3FF\",\n      98: \"#E5F6FF\"\n    },\n    gray: {\n      default: \"#CCCCCC\",\n      60: \"#999999\",\n      90: \"#E6E6E6\",\n      95: \"#F2F2F2\"\n    },\n    orange: {\n      default: \"#F1690E\",\n      95: \"#FEF0E7\"\n    },\n    red: {\n      default: \"#E50051\",\n      95: \"#FFE5EE\"\n    },\n    purple: {\n      default: \"#B26DFF\",\n    },\n    black: {\n      default: \"#181818\",\n    }\n  }\n}\n\nconst quoteColor = {r: 1, g: 0.369, b: 0.941, a: 1}\n\nexport default function(context) {\n  var selection = context.selection;\n  context.document.showMessage('Plugin 🏃');\n\n  if (selection.length == 0) {\n    return context.document.showMessage('🗝🌈: Please select an object');\n  }\n  \n  const colorMapping = getColorVariablesMapping(colorVariables)\n  const currentSelectedColor = getFillHexColor(selection).toString().toUpperCase();\n  \n  // if its a text\n  // if (selection[0] instanceof MSTextLayer) {\n  //   const lay = createTextLayer('tone', 'tone: ' + 'NEGATIVE');\n  //   // gets the position of selection\n  //   var midX=context.selection[0].frame().midX();\n  //   var midY=context.selection[0].frame().midY();\n  // \n  //   // pass the position to the text layer to be inserter\n  //   lay.frame().midX = midX;\n  //   lay.frame().midY = midY;\n  //   return context.document.currentPage().addLayers([lay]);\n  // }\n  const text = colorMapping[\"#\" + currentSelectedColor];\n  // if its a shape\n  getFillColorVariable(selection, text)\n}\n\nfunction insertTokenText({x, y, width}, layerName, title, text) {\n  const textWithToken = createTextLayer(layerName, title + text);\n  // pass the position to the text layer to be inserted\n  textWithToken.frame().x = x + width + 100;\n  textWithToken.frame().midY = y;\n  \n  // pass the position to quote line\n  createQuoteLine(x, y, width);\n\n  // add the layer to the artboar\n  context.document.currentPage().addLayers([textWithToken]);\n}\n\n\nfunction getFillColorVariable(selection, text) {\n  // gets the position of selection\n  var x = selection[0].frame().x();\n  var selectedElementWidth = selection[0].frame().width();\n  var midY =selection[0].frame().midY();\n\n  const position = {\n    x, y: midY, width: selectedElementWidth\n  }\n  insertTokenText(position, 'Token', 'Fill color: ', text)\n}\n\nfunction createQuoteLine(x, y, elementWidth) {\n  var path = NSBezierPath.bezierPath();\n  path.moveToPoint(NSMakePoint(x + elementWidth - 5, y));\n  path.lineToPoint(NSMakePoint(x + elementWidth + 90, y));\n\n  var shape = MSShapeGroup.shapeWithBezierPath(MSPath.pathWithBezierPath(path));\n  var border = shape.style().addStylePartOfType(1);\n  border.color = MSColor.colorWithRGBADictionary(quoteColor);\n  border.thickness = 1;\n\n  context.document.currentPage().addLayers([shape]);\n}\n\nfunction getFillHexColor(selection) {\n  var layer = context.selection[0]\n  var selectedColor = getFillRGBColor(\"fill\", layer)\n  var colorHex = selectedColor.immutableModelObject().hexValue().toString()\n  return colorHex\n}\n\nfunction getFillRGBColor (type, layer) {\n  var color\n\n  if (type === \"fill\") {\n    if (layer instanceof MSTextLayer) {\n      color = layer.textColor()\n    } else {\n      color = layer.style().fills().firstObject().color()\n    }\n  } else {\n    color = layer.style().borders().firstObject().color()\n  }\n\n  return color\n}\n\n// Hex to Color - helper function\nvar hexToColor = function(hex, alpha) {\n    var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex),\n        red = parseInt(result[1], 16) / 255,\n        green = parseInt(result[2], 16) / 255,\n        blue = parseInt(result[3], 16) / 255,\n        alpha = (typeof alpha !== 'undefined') ? alpha : 1;\n    return NSColor.colorWithCalibratedRed_green_blue_alpha(red, green, blue, alpha)\n}\n\n\nfunction createTextLayer(name, stringValue) {\n    var textLayer = MSTextLayer.new();\n    textLayer.stringValue = stringValue\n    textLayer.name = name\n    textLayer.setTextColor(MSColor.colorWithRGBADictionary(quoteColor))\n    return textLayer;\n}\n\nfunction getColorVariablesMapping(variables) {\n  const obj = variables.baseColors\n  const colorNames = {}\n  // gets default color variables\n  Object.keys(obj).map(colorGroupName => {\n    const colorGroup = obj[colorGroupName]\n\n    colorNames[colorGroup.default] = '--color-' + colorGroupName;\n\n    Object.keys(colorGroup).forEach(variation => {\n      // filters out default values\n      if (variation !== 'default') {\n        colorNames[colorGroup[variation]] = '--color-' + colorGroupName + '-' + variation;\n      }\n    })\n  })\n\n  return colorNames\n}\n"],"sourceRoot":""}