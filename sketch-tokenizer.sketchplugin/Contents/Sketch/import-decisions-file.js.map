{"version":3,"sources":["webpack://exports/webpack/bootstrap","webpack://exports/./src/import-decisions-file.js"],"names":["baseColors","context","selection","document","showMessage","dataPath","askForJSON","jsonData","loadJSONData","jsonDir","NSString","stringWithString","stringByDeletingLastPathComponent","threadDictionary","NSThread","mainThread","importedBaseColors","path","panel","NSOpenPanel","openPanel","setTitle","setMessage","setPrompt","setCanCreateDirectories","setCanChooseFiles","setCanChooseDirectories","setAllowsMultipleSelection","setShowsHiddenFiles","setExtensionHidden","setDirectoryURL","NSURL","fileURLWithPath","NSUserName","pressedButton","runModal","NSOKButton","URL","contents","readFileAsText","data","JSON","parse","e","stringWithContentsOfFile_encoding_error","NSUTF8StringEncoding"],"mappings":";;;;;;AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;;;;;;;;;;AClFA,IAAIA,UAAJ;AACA,+DAAe,UAASC,OAAT,EAAkB;AAC/B,MAAIC,YAAYD,QAAQC,SAAxB;AACAD,UAAQE,QAAR,CAAiBC,WAAjB,CAA6B,WAA7B,EAF+B,CAI/B;;AACA,MAAIC,WAAWC,WAAW,cAAX,CAAf,CAL+B,CAM/B;;AACA,MAAI,CAACD,QAAL,EAAe,OAPgB,CAS/B;;AACA,MAAIE,WAAWC,aAAaH,QAAb,CAAf;AACA,MAAI,CAACE,QAAL,EAAe,OAXgB,CAa/B;;AACA,MAAIE,UAAUC,SAASC,gBAAT,CACZN,QADY,EAEZO,iCAFY,EAAd,CAd+B,CAkB/B;;AAEA,MAAIC,mBAAmBC,SAASC,UAAT,GAAsBF,gBAAtB,EAAvB;AACAA,mBAAiBG,kBAAjB,qBAA2CT,SAASP,UAApD;AAEAC,UAAQE,QAAR,CAAiBC,WAAjB,CAA6B,oCAA7B;AACD;AAEM,SAASE,UAAT,CAAoBW,IAApB,EAA0B;AAC/B;AACA,MAAIC,QAAQC,YAAYC,SAAZ,EAAZ,CAF+B,CAI/B;;AACAF,QAAMG,QAAN,CAAe,aAAf;AACAH,QAAMI,UAAN,CAAiB,gDAAjB;AACAJ,QAAMK,SAAN,CAAgB,QAAhB;AACAL,QAAMM,uBAAN,CAA8B,KAA9B;AACAN,QAAMO,iBAAN,CAAwB,IAAxB;AACAP,QAAMQ,uBAAN,CAA8B,KAA9B;AACAR,QAAMS,0BAAN,CAAiC,KAAjC;AACAT,QAAMU,mBAAN,CAA0B,KAA1B;AACAV,QAAMW,kBAAN,CAAyB,KAAzB,EAb+B,CAe/B;;AACA,MAAIZ,IAAJ,EAAU;AACRC,UAAMY,eAAN,CAAsBC,MAAMC,eAAN,CAAsBf,IAAtB,CAAtB;AACD,GAFD,MAEO;AACLC,UAAMY,eAAN,CAAsBC,MAAMC,eAAN,CAAsB,YAAYC,YAAlC,CAAtB;AACD,GApB8B,CAsB/B;;;AACA,MAAIC,gBAAgBhB,MAAMiB,QAAN,EAApB;;AACA,MAAID,iBAAiBE,UAArB,EAAiC;AAC/B,WAAOlB,MAAMmB,GAAN,GAAYpB,IAAZ,EAAP;AACD;AACF;AAEM,SAAST,YAAT,CAAsBS,IAAtB,EAA4B;AACjC;AACA,MAAIqB,WAAWC,eAAetB,IAAf,CAAf,CAFiC,CAIjC;;AACA,MAAIuB,IAAJ;;AACA,MAAI;AACFA,WAAOC,KAAKC,KAAL,CAAWJ,QAAX,CAAP;AACD,GAFD,CAEE,OAAOK,CAAP,EAAU;AACV1C,YAAQE,QAAR,CAAiBC,WAAjB,CACE,+DADF;AAGA;AACD;;AAED,SAAOoC,IAAP;AACD;AAEM,SAASD,cAAT,CAAwBtB,IAAxB,EAA8B;AACnC,SAAOP,SAASkC,uCAAT,CACL3B,IADK,EAEL4B,oBAFK,EAGL,KAHK,CAAP;AAKD,C","file":"import-decisions-file.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/import-decisions-file.js\");\n","let baseColors;\nexport default function(context) {\n  var selection = context.selection;\n  context.document.showMessage('Plugin üèÉ');\n\n  //ask for JSON file path, passing the last location if available\n  let dataPath = askForJSON('lastJSONPath');\n  // console.log('dataPath', dataPath)\n  if (!dataPath) return;\n\n  //load json data\n  let jsonData = loadJSONData(dataPath);\n  if (!jsonData) return;\n\n  //get root dir used when populating local images\n  let jsonDir = NSString.stringWithString(\n    dataPath\n  ).stringByDeletingLastPathComponent();\n\n  // console.log('jsonData', jsonData)\n\n  let threadDictionary = NSThread.mainThread().threadDictionary();\n  threadDictionary.importedBaseColors = { ...jsonData.baseColors };\n\n  context.document.showMessage('üì©üéâ: File imported! Ready to use!');\n}\n\nexport function askForJSON(path) {\n  //create panel\n  let panel = NSOpenPanel.openPanel();\n\n  //set panel properties\n  panel.setTitle('Select JSON');\n  panel.setMessage(\"Please select the JSON file you'd like to use.\");\n  panel.setPrompt('Select');\n  panel.setCanCreateDirectories(false);\n  panel.setCanChooseFiles(true);\n  panel.setCanChooseDirectories(false);\n  panel.setAllowsMultipleSelection(false);\n  panel.setShowsHiddenFiles(false);\n  panel.setExtensionHidden(false);\n\n  //set initial panel path\n  if (path) {\n    panel.setDirectoryURL(NSURL.fileURLWithPath(path));\n  } else {\n    panel.setDirectoryURL(NSURL.fileURLWithPath('/Users/' + NSUserName()));\n  }\n\n  //show panel\n  let pressedButton = panel.runModal();\n  if (pressedButton == NSOKButton) {\n    return panel.URL().path();\n  }\n}\n\nexport function loadJSONData(path) {\n  //load contents\n  let contents = readFileAsText(path);\n\n  //get data from JSON\n  let data;\n  try {\n    data = JSON.parse(contents);\n  } catch (e) {\n    context.document.showMessage(\n      \"There was an error parsing data. Please make sure it's valid.\"\n    );\n    return;\n  }\n\n  return data;\n}\n\nexport function readFileAsText(path) {\n  return NSString.stringWithContentsOfFile_encoding_error(\n    path,\n    NSUTF8StringEncoding,\n    false\n  );\n}\n"],"sourceRoot":""}